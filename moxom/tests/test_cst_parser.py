from moxom.compiler.cstparser import *
import unittest


tests = (
    (
        [IdentifierToken("computer"), IdentifierToken("start")],
        CstNode(
            IdentifierToken("computer"),
            right_node=CstNode(
                IdentifierToken("start")
            )
        )
    ),
    (
        [IdentifierToken("computer"), StringToken('"Macbook"'), IdentifierToken("start")],
        CstNode(
            IdentifierToken("computer"),
            right_node=CstNode(
                StringToken('"Macbook"'),
                right_node=CstNode(
                    IdentifierToken("start")
                )
            )
        )
    ),
    (
        [IdentifierToken("computer"), StringToken('"Macbook"'), IdentifierToken("start"),
         OperatorToken("then"),
         IdentifierToken("computer"), StringToken('"Macbook"'), IdentifierToken("shutdown")],
        CstNode(
            OperatorToken("then"),
            left_node=CstNode(
                IdentifierToken("computer"),
                right_node=CstNode(
                    StringToken('"Macbook"'),
                    right_node=CstNode(
                        IdentifierToken("start")
                    )
                )
            ),
            right_node=CstNode(
                IdentifierToken("computer"),
                right_node=CstNode(
                    StringToken('"Macbook"'),
                    right_node=CstNode(
                        IdentifierToken("shutdown")
                    )
                )
            )
        )
    ),
    (
        [IdentifierToken("computer"), StringToken('"Dell"'), IdentifierToken("open"), StringToken('"Chrome"'),
         OperatorToken("and"),
         IdentifierToken("laptop"), StringToken('"Macbook"'), IdentifierToken("open"), StringToken('"Safari"')],
        CstNode(
            OperatorToken("and"),
            left_node=CstNode(
                IdentifierToken("computer"),
                right_node=CstNode(
                    StringToken('"Dell"'),
                    right_node=CstNode(
                        IdentifierToken("open"),
                        right_node=CstNode(StringToken('"Chrome"'))
                    )
                )
            ),
            right_node = CstNode(
                IdentifierToken("laptop"),
                right_node=CstNode(
                    StringToken('"Macbook"'),
                    right_node=CstNode(
                        IdentifierToken("open"),
                        right_node=CstNode(StringToken('"Safari"'))
                    )
                )
            )
        )
    ),
    (
        [LParanToken(),
         IdentifierToken("computer"), IdentifierToken("start"),
         OperatorToken("then"),
         IdentifierToken("computer"), IdentifierToken("open"),
         RParanToken(),
         OperatorToken("and"),
         LParanToken(),
         IdentifierToken("laptop"), IdentifierToken("start"),
         OperatorToken("then"),
         IdentifierToken("laptop"), IdentifierToken("open"),
         RParanToken()
         ],
        CstNode(
            OperatorToken("and"),
            left_node=CstNode(
                Expr(),
                right_node=CstNode(
                    OperatorToken("then"),
                    left_node=CstNode(
                        IdentifierToken("computer"),
                        right_node=CstNode(IdentifierToken("start"))
                    ),
                    right_node=CstNode(
                        IdentifierToken("computer"),
                        right_node=CstNode(IdentifierToken("open"))
                    )
                )
            ),
            right_node=CstNode(
                Expr(),
                right_node=CstNode(
                    OperatorToken("then"),
                    left_node=CstNode(
                        IdentifierToken("laptop"),
                        right_node=CstNode(IdentifierToken("start"))
                    ),
                    right_node=CstNode(
                        IdentifierToken("laptop"),
                        right_node=CstNode(IdentifierToken("open"))
                    )
                )
            )
        )
    ),
    (
        [IdentifierToken("full"),
         OperatorToken('='),
         LParanToken(),
         IdentifierToken("computer"),
         IdentifierToken("start"),
         OperatorToken("then"),
         IdentifierToken("computer"),
         IdentifierToken("open"),
         StringToken('"Youtube"'),
         RParanToken(),
         OperatorToken("and"),
         LParanToken(),
         IdentifierToken("laptop"),
         IdentifierToken("start"),
         OperatorToken("then"),
         IdentifierToken("laptop"),
         IdentifierToken("open"),
         StringToken('"Safari"'),
         RParanToken()
         ],
        CstNode(
            OperatorToken("="),
            left_node=CstNode(IdentifierToken("full")),
            right_node=CstNode(
                OperatorToken("and"),
                left_node=CstNode(
                    Expr(),
                    right_node=CstNode(
                        OperatorToken("then"),
                        left_node=CstNode(
                            IdentifierToken("computer"),
                            right_node=CstNode(IdentifierToken("start"))
                        ),
                        right_node=CstNode(
                            IdentifierToken("computer"),
                            right_node=CstNode(
                                IdentifierToken("open"),
                                right_node=CstNode(StringToken('"Youtube"'))
                            )
                        )
                    )
                ),
                right_node=CstNode(
                    Expr(),
                    right_node=CstNode(
                        OperatorToken("then"),
                        left_node=CstNode(
                            IdentifierToken("laptop"),
                            right_node=CstNode(IdentifierToken("start"))
                        ),
                        right_node=CstNode(
                            IdentifierToken("laptop"),
                            right_node=CstNode(
                                IdentifierToken("open"),
                                right_node=CstNode(StringToken('"Safari"'))
                            )
                        ),
                    )
                )
            )
        )
    ),
    (
        [IdentifierToken("start_mac"),
         OperatorToken('='),
         IdentifierToken("computer"),
         StringToken('"Macbook"'),
         IdentifierToken("start")],
        CstNode(
            OperatorToken("="),
            left_node=CstNode(IdentifierToken("start_mac")),
            right_node=CstNode(
                IdentifierToken("computer"),
                right_node=CstNode(
                    StringToken('"Macbook"'),
                    right_node=CstNode(
                        IdentifierToken("start")
                    )
                )
            )
        )
    ),
    (
        [
            IdentifierToken("full_computer_work"),
            OperatorToken("="),
            IdentifierToken("computer"),
            IdentifierToken("start"),
            OperatorToken("then"),
            IdentifierToken("computer"),
            IdentifierToken("open"),
            StringToken('"Youtube"'),
            OperatorToken("then"),
            IdentifierToken("computer"),
            IdentifierToken("shutdown")
        ],
        CstNode(
            OperatorToken("="),
            left_node=CstNode(IdentifierToken("full_computer_work")),
            right_node=CstNode(
                OperatorToken("then"),
                left_node=CstNode(
                    IdentifierToken("computer"),
                    right_node=CstNode(
                        IdentifierToken("start")
                    )
                ),
                right_node=CstNode(
                    OperatorToken("then"),
                    left_node=CstNode(
                        IdentifierToken("computer"),
                        right_node=CstNode(
                            IdentifierToken("open"),
                            right_node=CstNode(StringToken('"Youtube"'))
                        )
                    ),
                    right_node=CstNode(
                        IdentifierToken("computer"),
                        right_node=CstNode(IdentifierToken("shutdown"))
                    )
                )
            )
        )
    ),
    (
        [
            IdentifierToken("full_work"),
            OperatorToken("="),
            IdentifierToken("full_computer_work"),
            OperatorToken("and"),
            IdentifierToken("full_laptop_work")
        ],
        CstNode(
            OperatorToken("="),
            left_node=CstNode(IdentifierToken("full_work")),
            right_node=CstNode(
                OperatorToken("and"),
                left_node=CstNode(IdentifierToken("full_computer_work")),
                right_node=CstNode(IdentifierToken("full_laptop_work"))
            )
        )
    ),
    (
        [
            IdentifierToken("both_open"),
            IdentifierToken("url"),
            OperatorToken("="),
            IdentifierToken("computer"),
            IdentifierToken("open"),
            IdentifierToken("url"),
            OperatorToken("and"),
            IdentifierToken("laptop"),
            IdentifierToken("open"),
            IdentifierToken("url")
        ],
        CstNode(
            OperatorToken("="),
            left_node=CstNode(
                IdentifierToken("both_open"),
                right_node=CstNode(IdentifierToken("url"))
            ),
            right_node=CstNode(
                OperatorToken("and"),
                left_node=CstNode(
                    IdentifierToken("computer"),
                    right_node=CstNode(
                        IdentifierToken("open"),
                        right_node=CstNode(
                            IdentifierToken("url")
                        )
                    )
                ),
                right_node=CstNode(
                    IdentifierToken("laptop"),
                    right_node=CstNode(
                        IdentifierToken("open"),
                        right_node=CstNode(
                            IdentifierToken("url")
                        )
                    )
                )
            )
        )
    )
)


class CstParserTest(unittest.TestCase):
    def test_should_correctly_parse(self):
        for input_tokens, expected_ast in tests:
            with self.subTest(input_tokens.copy()):
                parser = CstParser()
                actual = parser.parse(input_tokens)
                self.assertEqual(actual, expected_ast)
